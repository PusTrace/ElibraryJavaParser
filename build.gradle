plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }  // Добавляем этот репозиторий для JavaFX
}

dependencies {

    // Selenium WebDriver
    implementation 'org.seleniumhq.selenium:selenium-java:4.27.0'
    implementation 'org.seleniumhq.selenium:selenium-devtools-v131:4.27.0'

    // WebDriver Manager для автоматической загрузки драйверов
    implementation 'io.github.bonigarcia:webdrivermanager:5.8.0'

    // логирование
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'


    // unit-tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.8.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.9.0'


    // parser
    implementation 'io.rest-assured:rest-assured:5.4.0'
    implementation 'org.jsoup:jsoup:1.15.3'

    // JavaFX 17
    implementation 'org.openjfx:javafx-controls:17'
    implementation 'org.openjfx:javafx-fxml:17'  // Если используете FXML

    //other
    implementation 'com.google.code.gson:gson:2.8.9'


}

application {
    // Указываем основной класс с JavaFX
    mainClass = 'pustrace.elibraryjavaparser.Main'
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml' ]  // Указываем модули, которые используем
}

shadowJar {
    archiveClassifier.set('all')
    manifest {
        attributes 'Main-Class': 'pustrace.elibraryjavaparser.Main'
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    destinationDir = file("$buildDir/docs/javadoc")
    options.encoding = 'UTF-8'
}


test {
    useJUnitPlatform()
}
